#!/bin/sh
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname $0)/common.sh

# for jq
PATH=/usr/local/bin:$PATH

payload=$TMPDIR/git-resource-request

cat > $payload <&0

load_pubkey $payload
configure_git_ssl_verification $payload
configure_credentials $payload

uri=$(jq -r '.source.uri // ""' < $payload)
git_config_payload=$(jq -r '.source.git_config // []' < $payload)
timestamp=$(jq -r '.version.timestamp // ""' < $payload)

configure_git_global "${git_config_payload}"

destination=$TMPDIR/git-tag-resource-repo-cache

if [ -d $destination ]; then
  cd $destination
  git fetch
  git reset --hard FETCH_HEAD
else
  git clone $uri $destination
  cd $destination
fi

if [ -z $timestamp ]; then
  latest_tag=$(git tag --sort=-creatordate --format='{"timestamp":"%(creatordate:unix)", "tag":"%(refname:short)"}' | head -1)
  echo "[$latest_tag]"
else
  all_tags=$(git tag --sort=creatordate --format='{"timestamp":"%(creatordate:unix)", "tag":"%(refname:short)"}' | paste -sd ",")
  all_tags_json="[$all_tags]"

  echo $all_tags_json | jq "[ .[] | select(.timestamp | tonumber >= $timestamp) ]" >&3
fi
